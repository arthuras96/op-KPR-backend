create database prdb;
use prdb;
SET GLOBAL lc_time_names=pt_BR;

CREATE USER 'sistema'@'localhost' IDENTIFIED BY 'gvt@645';
GRANT ALL PRIVILEGES ON prdb.* TO 'sistema'@'localhost';
FLUSH PRIVILEGES;

CREATE TABLE tbtypeperson(
	IDTYPEPERSON SERIAL PRIMARY KEY NOT NULL,
   	TYPEPERSON VARCHAR(20) NOT NULL
);

INSERT INTO tbtypeperson(TYPEPERSON) VALUES ('Física');
INSERT INTO tbtypeperson(TYPEPERSON) VALUES ('Jurídica');

CREATE TABLE tbrole(
	IDROLE SERIAL PRIMARY KEY NOT NULL,
   	ROLE VARCHAR(20) NOT NULL
);

INSERT INTO tbrole(ROLE) VALUES ('root');
INSERT INTO tbrole(ROLE) VALUES ('admin');
INSERT INTO tbrole(ROLE) VALUES ('user');
INSERT INTO tbrole(ROLE) VALUES ('resident');
INSERT INTO tbrole(ROLE) VALUES ('company');

CREATE TABLE tbperson(
	IDPERSON SERIAL PRIMARY KEY NOT NULL,
   	NAME VARCHAR(90) NOT NULL,
   	IDROLE INT NOT NULL REFERENCES tbrole(IDROLE),
	USERNAME VARCHAR(30) NOT NULL,
	PASSWORD VARCHAR(40) NOT NULL,
	IDTYPEPERSON INT NOT NULL REFERENCES tbtypeperson(IDTYPEPERSON),
	ACTIVE BOOL,
   	REGISTRATIONDATE TIMESTAMP NOT NULL DEFAULT NOW()
);

INSERT INTO tbperson(
	NAME, IDROLE, USERNAME, PASSWORD, IDTYPEPERSON, ACTIVE)
	VALUES ('Arthur Alencar Silva', 1, 'arthur.alencar', 'teste', 1, true);
	
INSERT INTO tbperson(
	NAME, IDROLE, USERNAME, PASSWORD, IDTYPEPERSON, ACTIVE)
	VALUES ('Teste User', 3, 'teste.user', 'teste', 1, true);

CREATE TABLE tbgender(
	IDGENDER SERIAL PRIMARY KEY NOT NULL,
	GENDER VARCHAR(20)
);

INSERT INTO tbgender (GENDER) values ('Masculino');
INSERT INTO tbgender (GENDER) values ('Feminino');

CREATE TABLE tbnaturalperson(
	IDPERSON INT REFERENCES tbperson(IDPERSON),
	CPF VARCHAR(14),
	RG VARCHAR(12),
	BIRTHDATE DATE,
	IDGENDER INT REFERENCES tbgender(IDGENDER)
);

CREATE TABLE tbjuridicalperson(
	IDPERSON INT REFERENCES tbperson(IDPERSON),
	CNPJ VARCHAR(19),
	CONTACT VARCHAR(100),
	DURESSPASSWORD VARCHAR(50),
	HISTORICPERSIST INT
);

CREATE TABLE tbtypeunity (
	IDTYPEUNITY SERIAL PRIMARY KEY NOT NULL,
	TYPEUNITY VARCHAR(40)
);

INSERT INTO tbtypeunity (TYPEUNITY) values ('Apartamento');
INSERT INTO tbtypeunity (TYPEUNITY) values ('Setor');

CREATE TABLE tbunitystate (
	IDUNITYSTATE SERIAL PRIMARY KEY NOT NULL,
	UNITYSTATE VARCHAR(40)
);

INSERT INTO tbunitystate (UNITYSTATE) values ('Desocupada');
INSERT INTO tbunitystate (UNITYSTATE) values ('Ocupada');
INSERT INTO tbunitystate (UNITYSTATE) values ('Alugada');

CREATE TABLE tbunity (
	IDUNITY SERIAL PRIMARY KEY NOT NULL,
	IDTYPEUNITY INT REFERENCES tbtypeunity(IDTYPEUNITY),
	UNITYNAME VARCHAR(40),
	IDUNITYSTATE INT REFERENCES tbunitystate(IDUNITYSTATE),
	IDACCOUNT INT REFERENCES tbperson(IDPERSON)
);

CREATE TABLE tbvehicle (
	IDVEHICLE SERIAL PRIMARY KEY NOT NULL,
	LICENSEPLATE VARCHAR(12),
	MODEL VARCHAR(50),
	MANUFACTURER VARCHAR(50),
	COLOR VARCHAR(50),
	COMMENTS VARCHAR(500),
	IDACCOUNT INT REFERENCES tbperson(IDPERSON),
	ACTIVE BOOL
);

CREATE TABLE tbaddress (
	CEP VARCHAR(8),
	ADDRESS VARCHAR(120),
	NUMBER INT,
	REFERENCE VARCHAR(100),
	NEIGHBORHOOD VARCHAR(50),
	CITY VARCHAR(50),
	STATE VARCHAR(50),
	COUNTRY VARCHAR(50),
	IDPERSON INT REFERENCES tbperson(IDPERSON)
);

CREATE TABLE tbtypecontact (
	IDTYPECONTACT SERIAL PRIMARY KEY NOT NULL,
	TYPECONTACT VARCHAR(40)
);

INSERT INTO tbtypecontact (TYPECONTACT) values ('E-mail');
INSERT INTO tbtypecontact (TYPECONTACT) values ('Telefone');

CREATE TABLE tbcontact (
	IDCONTACT SERIAL PRIMARY KEY NOT NULL,
	IDTYPECONTACT INT REFERENCES tbtypecontact(IDTYPECONTACT),
	EMAIL VARCHAR(100),
	DDDTEL VARCHAR(2),
	TEL VARCHAR(10),
	IDPERSON INT REFERENCES tbperson(IDPERSON)
);

CREATE TABLE tblogsystem (
	IDLOGSYSTEM SERIAL PRIMARY KEY NOT NULL,
	EXECUTANT INT REFERENCES tbperson(IDPERSON),
	AFFECTED INT REFERENCES tbperson(IDPERSON),
	ACTION VARCHAR(600),
	REGISTRATIONDATE TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE TABLE tblogerror (
	IdLogError serial PRIMARY KEY NOT NULL,
	Executant int references tbperson(IdPerson),
	Action varchar(100),
	Message varchar(5000),
	RegistrationDate TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE TABLE tblogtask (
	IDLOGTASK SERIAL PRIMARY KEY NOT NULL,
	EXECUTANT INT REFERENCES tbperson(IDPERSON),
	AFFECTED INT REFERENCES tbperson(IDPERSON),
	ACTION VARCHAR(100),
	REGISTRATIONDATE TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE TABLE tbannotation (
	IDANNOTATION SERIAL PRIMARY KEY NOT NULL,
	IDPERSON INT REFERENCES tbperson(IDPERSON),
	EXECUTANT INT REFERENCES tbperson(IDPERSON),
	ANNOTATION VARCHAR(5000),
	REGISTRATIONDATE TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE TABLE tbzone (
	IDZONE SERIAL PRIMARY KEY NOT NULL,
	IDPERSON INT REFERENCES tbperson(IDPERSON),
	ZONE VARCHAR(150),
	ACTIVE BOOLEAN,
	ISRESTRICTED BOOLEAN
);

CREATE TABLE tbpriority (
	IDPRIORITY SERIAL PRIMARY KEY NOT NULL,
	PRIORITY VARCHAR(150)
);

INSERT INTO tbpriority (PRIORITY) values ('Baixo');
INSERT INTO tbpriority (PRIORITY) values ('Médio');
INSERT INTO tbpriority (PRIORITY) values ('Alto');
INSERT INTO tbpriority (PRIORITY) values ('Crítico');

CREATE TABLE tbevent (
	IDEVENT SERIAL PRIMARY KEY NOT NULL,
	NAME VARCHAR(150),
	IDPRIORITY INT REFERENCES tbpriority(IDPRIORITY),
	IDPERSON INT REFERENCES tbperson(IDPERSON),
	MANUALOCCURRENCE BOOLEAN,
	MANUALCREATION BOOLEAN,
	RECORDIMAGES BOOLEAN,
	INSTRUCTIONS VARCHAR(3000),
	IDZONE INT REFERENCES tbzone(IDZONE),
	ACTIVE BOOLEAN
);

CREATE TABLE tbtaskopen (
	IDTASK SERIAL PRIMARY KEY NOT NULL,
	IDACCOUNT INT REFERENCES tbperson(IDPERSON),
	IDEVENT INT REFERENCES tbevent(IDEVENT),
	IDZONE INT REFERENCES tbzone(IDZONE),
	IDPRIORITY INT REFERENCES tbpriority(IDPRIORITY),
	DESCRIPTION VARCHAR(1000),
	ACUMULATE INT,
	DATETIMEOPEN TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE TABLE tbtaskatwork (
	IDTASK SERIAL,
	IDACCOUNT INT REFERENCES tbperson(IDPERSON),
	IDEVENT INT REFERENCES tbevent(IDEVENT),
	IDZONE INT REFERENCES tbzone(IDZONE),
	IDPRIORITY INT REFERENCES tbpriority(IDPRIORITY),
	IDUSER INT REFERENCES tbperson(IDPERSON),
	DESCRIPTION VARCHAR(1000),
	ACUMULATE INT,
	DATETIMEOPEN TIMESTAMP,
	DATETIMEGET TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE TABLE tbtaskwait (
	IDTASK SERIAL,
	IDACCOUNT INT REFERENCES tbperson(IDPERSON),
	IDEVENT INT REFERENCES tbevent(IDEVENT),
	IDZONE INT REFERENCES tbzone(IDZONE),
	IDPRIORITY INT REFERENCES tbpriority(IDPRIORITY),
	IDUSER INT REFERENCES tbperson(IDPERSON),
	DESCRIPTION VARCHAR(1000),
	ACUMULATE INT,
	DATETIMEOPEN TIMESTAMP,
	DATETIMEGET TIMESTAMP
);

CREATE TABLE tbtaskclose (
	IDTASK SERIAL PRIMARY KEY NOT NULL,
	IDACCOUNT INT REFERENCES tbperson(IDPERSON),
	IDEVENT INT REFERENCES tbevent(IDEVENT),
	IDZONE INT REFERENCES tbzone(IDZONE),
	IDPRIORITY INT REFERENCES tbpriority(IDPRIORITY),
	IDUSER INT REFERENCES tbperson(IDPERSON),
	DESCRIPTION VARCHAR(1000),
	ACUMULATE INT,
	RESOLUTION VARCHAR(1500),
	DATETIMEOPEN TIMESTAMP,
	DATETIMEGET TIMESTAMP,
	DATETIMECLOSE TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE TABLE tbschedule (
	IDSCHEDULE SERIAL PRIMARY KEY NOT NULL,
	IDPERSON INT REFERENCES tbperson(IDPERSON),
	NAME VARCHAR(150),
	DESCRIPTION VARCHAR(450),
	BOOLSUNDAY BOOLEAN,
	BOOLMONDAY BOOLEAN,
	BOOLTUESDAY BOOLEAN,
	BOOLWEDNESDAY BOOLEAN,
	BOOLTHURSDAY BOOLEAN,
	BOOLFRIDAY BOOLEAN,
	BOOLSATURDAY BOOLEAN,
	SUNDAYSTART TIME,
	SUNDAYEND TIME,
	MONDAYSTART TIME,
	MONDAYEND TIME,
	TUESDAYSTART TIME,
	TUESDAYEND TIME,
	WEDNESDAYSTART TIME,
	WEDNESDAYEND TIME,
	THURSDAYSTART TIME,
	THURSDAYEND TIME,
	FRIDAYSTART TIME,
	FRIDAYEND TIME,
	SATURDAYSTART TIME,
	SATURDAYEND TIME
);

CREATE TABLE tbtaskresolution (
	IDTASKRESOLUTION SERIAL PRIMARY KEY NOT NULL,
	NAME VARCHAR(50),
	TASKRESOLUTION VARCHAR(300),
	SEQUENCE INT
);

create table tbpersonunity (
	IDPERSON INT REFERENCES tbperson(IDPERSON),
    IDACCOUNT INT REFERENCES tbperson(IDPERSON),
    IDUNITY INT REFERENCES tbunity(IDUNITY)
);

create table tbpersonvehicle (
	IDPERSON INT REFERENCES tbperson(IDPERSON),
    IDACCOUNT INT REFERENCES tbperson(IDPERSON),
    IDVEHICLE INT REFERENCES tbvehicle(IDVEHICLE)
);

CREATE TABLE tbtyperesident(
	IDTYPERESIDENT SERIAL PRIMARY KEY NOT NULL,
   	TYPERESIDENT VARCHAR(20) NOT NULL
);

INSERT INTO tbtyperesident(TYPERESIDENT) VALUES ('Funcionário');
INSERT INTO tbtyperesident(TYPERESIDENT) VALUES ('Morador');
INSERT INTO tbtyperesident(TYPERESIDENT) VALUES ('Visitante');
INSERT INTO tbtyperesident(TYPERESIDENT) VALUES ('Prestador de serviço');

create table tbresident (
	IDPERSON INT REFERENCES tbperson(IDPERSON),
    IDACCOUNT INT REFERENCES tbperson(IDPERSON),
    IDTYPERESIDENT INT REFERENCES tbtyperesident(IDTYPERESIDENT),
    ANSWERABLE BOOL,
    SPONSOR INT REFERENCES tbperson(IDPERSON),
	COMPANY VARCHAR(60),
	DEPARTMENT VARCHAR(60),
    NOTE VARCHAR(2000),
	ACCESSPERMISSION BOOL,
	ACCESSSTART DATE,
	ACCESSEND DATE
);

create table tbpersonaccesszone(
	IDPERSON INT REFERENCES tbperson(IDPERSON),
    IDACCOUNT INT REFERENCES tbperson(IDPERSON),
	IDZONE INT REFERENCES tbzone(IDZONE),
	IDSCHEDULE INT REFERENCES tbschedule(IDSCHEDULE),
	ACCESS BOOL
);